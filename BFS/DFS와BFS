import java.util.Scanner;
import java.util.LinkedList;
import java.util.Queue;
public class Main{
    static int N;
    static int M;
    static int V;
    static int Map[][];
    static boolean visited[];
    public static void dfs(int i){
        visited[i] = true;
        System.out.print(i+" ");
        for(int j=1; j<N+1; j++){
            if(Map[i][j] == 1 && !visited[j]){
                dfs(j);
            }
        }
    }
    public static void bfs(int i){
        Queue<Integer> q = new LinkedList<Integer>();
        q.add(i);
        visited[i] = true;
        System.out.print(i+" ");
        int temp;
        while(!q.isEmpty()){
            temp = q.remove();
            for(int j=1; j<N+1; j++){
                if(Map[temp][j] == 1 && !visited[j]){
                    q.add(j);
                    visited[j] = true;
                    System.out.print(j+" ");
                }
            }
        }
    }
    
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        N = sc.nextInt();
        M = sc.nextInt();
        V = sc.nextInt();
        Map = new int[N+1][N+1];
        visited = new boolean[N+1];
        for(int i=0; i<M; i++){
            int a = sc.nextInt();
            int b = sc.nextInt();
            
            Map[a][b] = Map[b][a] = 1;
        }
        dfs(V);
        System.out.println();
        for(int i=1; i<N+1; i++){
            visited[i] = false;
        }
        bfs(V);
    }
}
