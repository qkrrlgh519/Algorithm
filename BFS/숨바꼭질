import java.util.Scanner;
import java.util.LinkedList;
import java.util.Queue;
public class Main{
    
    static int n;
	static int k;
	static int arr [];
	static boolean visited [];
	
	static int bfs(int n, int k, int arr []){
		int dn = n;
		Queue<Integer> q = new LinkedList<Integer>();
		q.add(dn);
		arr[dn] = 0;
		visited[dn] = true;
		
		while(!q.isEmpty() && dn != k){
			dn = q.remove();
			
			for(int i=0; i<3; i++){
				int changen = 0;
				
				if(i == 0)
					changen = dn-1;
				if(i == 1)
					changen = dn+1;
				if(i == 2)
					changen = 2*dn;
				
				if(0<=changen && changen<=100000 && !visited[changen]){
					q.add(changen);
					arr[changen] = arr[dn] + 1;
					visited[changen] = true;
				}	
			}
		}	
		return arr[k];
	}
    
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
		n = sc.nextInt();
		k = sc.nextInt();
		
		arr = new int [1000001];
		visited = new boolean [1000001];

		System.out.println(bfs(n, k, arr));
    }
}
