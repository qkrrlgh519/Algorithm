import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;
class dot{
    int x;
    int y;
    dot(int x, int y){
        this.x = x;
        this.y = y;
    }
}
public class Main{
    static int n;
    static int m;
    static int miro [][];
    static boolean visited [][];
    static int cx [] = {0, 0, 1, -1};
    static int cy [] = {1, -1, 0, 0};
    
    public static void bfs(int x, int y){
        Queue<dot> q = new LinkedList<dot>();
        q.add(new dot(x,y));
        visited[x][y] = true;
        while(!q.isEmpty()){
            dot r = q.remove();
            for(int i=0; i<4; i++){
                int dx = r.x + cx[i];
                int dy = r.y + cy[i];
                if(dx<0 || dy<0 || dx>n-1 || dy>m-1)
                    continue;
                if(miro[dx][dy] == 0 || visited[dx][dy])
                    continue;
                q.add(new dot(dx,dy));
                visited[dx][dy] = true;
                miro[dx][dy] = miro[r.x][r.y] + 1;
            }
        }
    }
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        n = sc.nextInt();
        m = sc.nextInt();
        miro = new int [n][m];
        visited = new boolean [n][m];
        for(int i=0; i<n; i++){
            String temp = sc.next();
            for(int j=0; j<m; j++){
                miro[i][j] = temp.charAt(j) - 48;
                visited[i][j] = false;
            }
        }
        bfs(0,0);
        System.out.print(miro[n-1][m-1]);
    }
}
